//--------------------------------------------------
// This file contains CSS helper classes
//--------------------------------------------------

@import '../abstracts/hv-variables';
@import '../abstracts/hv-mixins';

//--------------------
// #Utilities
//--------------------

.clearfix {
  @include clearfix;
}

.u-no-underline {
  @include no-underline;
}

.u-imgdiv {
  @include imgdiv;
}



//--------------------
// #Helpers
//--------------------

.h-minied-list {
  @include minified-list;
}

// Uncertain future for this helper class
.h-valign-before:before,
.h-valign-after:after {
  content: '';
  display: inline-block;
  height: 100%;
  vertical-align: middle;
}

.h-animate-all {
  @include transition(all 0.25s ease);
}

.h-center-block {
  @include center-block;
}



//--------------------
// #Components
//--------------------

.c-input, .c-btn {
  display: inline-block;
  text-decoration: none;
  vertical-align: middle;
  white-space: nowrap;
  border: 1px solid;
  @include border-radius(2px);
  cursor: pointer;
  outline: none;
  @include appearance-toggle;
  @include transition(
    background-color 0.2s ease,
    color            0.2s ease,
    border-color     0.2s ease
  );

  @each $size, $value in $tag-sizes {
    &-#{$size} {
      @include tag_size($size);
    }
  }
}

.c-input { text-align: left;   }
.c-btn   { text-align: center; }

.c-btn {
  &-primary,
  &-secondary,
  &-grey,
  &-ghost {
    color: $hexW;
  }
  &-ghost {
    background-color: $hexW;
    border-color: $hexW;
  }
  &-grey {
    background-color: $hexFaded;
    border-color: $hexFaded;
  }
  &-grey#{&}-ghost {
    color: $hexFaded;
    background-color: transparent;
  }
  &-primary {
    background-color: $hexPrimary;
    border-color: $hexPrimary;
  }
  &-primary#{&}-ghost {
    color: $hexPrimary;
    background-color: transparent;
  }
  &-secondary {
    background-color: $hexSecondary;
    border-color: $hexSecondary;
  }
  &-secondary#{&}-ghost {
    color: $hexSecondary;
    background-color: transparent;
  }
}








//--------------------
// #Unsorted
//--------------------


// Main content containers
// 1. Make the container full-width with a maximum width
// 2. Center it in the viewport
// 3. Leave some space on the edges, especially valuable on small screens

.container {
  max-width: $widthContent; /* 1 */
  margin-left: auto; /* 2 */
  margin-right: auto; /* 2 */
  padding-left: 20px; /* 3 */
  padding-right: 20px; /* 3 */
  width: 100%; /* 1 */
 }


// Hide text while making it readable for screen readers
// 1. Needed in WebKit-based browsers because of an implementation bug;
//    See: https://code.google.com/p/chromium/issues/detail?id=457146

.hide-text {
  overflow: hidden;
  padding: 0; /* 1 */
  text-indent: 101%;
  white-space: nowrap;
}


// Hide element while making it readable for screen readers
// Shamelessly borrowed from HTML5Boilerplate:
// https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.vertical-align-container {
  @include flex_display;
  @include flex_align-items(center);
}

.vertical-align-child {
  @include pos_align-center(absolute, y);
}

.has-max-width {
  width: 100%;
  max-width: $widthContent;
  margin-left: auto;
  margin-right: auto;
}

.has-nav-max-width {
  width: 100%;
  max-width: ($widthMax + 30px);
  margin-left: auto;
  margin-right: auto;
}

.light-hidden {
  display: none;
}

.disable-input {
  color: #cccccc;
  background: #f2f2f2;
}

.disable-button {
  color: #cccccc;
  pointer-events: none;
}


